diff -u -r suts/openssl-1.1.1b/apps/s_cb.c suts/openssl-1.1.1b-patched/apps/s_cb.c
--- suts/openssl-1.1.1b/apps/s_cb.c	2019-02-26 15:15:30.000000000 +0100
+++ suts/openssl-1.1.1b-patched/apps/s_cb.c	2023-08-18 15:15:47.744392931 +0200
@@ -739,6 +739,11 @@
     memcpy(buffer, &port, sizeof(port));
     BIO_ADDR_rawaddress(peer, buffer + sizeof(port), NULL);
 
+    size_t length_cp = length;
+    unsigned char *buffer_cp = buffer;
+    while (length_cp--)
+        *buffer_cp++ = 0xEF;
+
     /* Calculate HMAC of buffer using the secret */
     HMAC(EVP_sha1(), cookie_secret, COOKIE_SECRET_LENGTH,
          buffer, length, cookie, cookie_len);
diff -u -r suts/openssl-1.1.1b/crypto/rand/drbg_lib.c suts/openssl-1.1.1b-patched/crypto/rand/drbg_lib.c
--- suts/openssl-1.1.1b/crypto/rand/drbg_lib.c	2019-02-26 15:15:30.000000000 +0100
+++ suts/openssl-1.1.1b-patched/crypto/rand/drbg_lib.c	2023-08-18 15:20:17.945002966 +0200
@@ -656,37 +656,40 @@
  */
 int RAND_DRBG_bytes(RAND_DRBG *drbg, unsigned char *out, size_t outlen)
 {
-    unsigned char *additional = NULL;
-    size_t additional_len;
-    size_t chunk;
-    size_t ret = 0;
-
-    if (drbg->adin_pool == NULL) {
-        if (drbg->type == 0)
-            goto err;
-        drbg->adin_pool = rand_pool_new(0, 0, drbg->max_adinlen);
-        if (drbg->adin_pool == NULL)
-            goto err;
-    }
-
-    additional_len = rand_drbg_get_additional_data(drbg->adin_pool,
-                                                   &additional);
-
-    for ( ; outlen > 0; outlen -= chunk, out += chunk) {
-        chunk = outlen;
-        if (chunk > drbg->max_request)
-            chunk = drbg->max_request;
-        ret = RAND_DRBG_generate(drbg, out, chunk, 0, additional, additional_len);
-        if (!ret)
-            goto err;
-    }
-    ret = 1;
-
- err:
-    if (additional != NULL)
-        rand_drbg_cleanup_additional_data(drbg->adin_pool, additional);
-
-    return ret;
+//    unsigned char *additional = NULL;
+//    size_t additional_len;
+//    size_t chunk;
+//    size_t ret = 0;
+//
+//    if (drbg->adin_pool == NULL) {
+//        if (drbg->type == 0)
+//            goto err;
+//        drbg->adin_pool = rand_pool_new(0, 0, drbg->max_adinlen);
+//        if (drbg->adin_pool == NULL)
+//            goto err;
+//    }
+//
+//    additional_len = rand_drbg_get_additional_data(drbg->adin_pool,
+//                                                   &additional);
+//
+//    for ( ; outlen > 0; outlen -= chunk, out += chunk) {
+//        chunk = outlen;
+//        if (chunk > drbg->max_request)
+//            chunk = drbg->max_request;
+//        ret = RAND_DRBG_generate(drbg, out, chunk, 0, additional, additional_len);
+//        if (!ret)
+//            goto err;
+//    }
+//    ret = 1;
+//
+// err:
+//    if (additional != NULL)
+//        rand_drbg_cleanup_additional_data(drbg->adin_pool, additional);
+//
+//    return ret;
+    for (int i=0; i<outlen; i++)
+	*out++ = i;
+    return 1;
 }
 
 /*
diff -u -r suts/openssl-1.1.1b/crypto/rand/rand_lib.c suts/openssl-1.1.1b-patched/crypto/rand/rand_lib.c
--- suts/openssl-1.1.1b/crypto/rand/rand_lib.c	2019-02-26 15:15:30.000000000 +0100
+++ suts/openssl-1.1.1b-patched/crypto/rand/rand_lib.c	2023-08-18 15:22:36.523366585 +0200
@@ -830,12 +830,15 @@
 
 int RAND_bytes(unsigned char *buf, int num)
 {
-    const RAND_METHOD *meth = RAND_get_rand_method();
-
-    if (meth->bytes != NULL)
-        return meth->bytes(buf, num);
-    RANDerr(RAND_F_RAND_BYTES, RAND_R_FUNC_NOT_IMPLEMENTED);
-    return -1;
+//    const RAND_METHOD *meth = RAND_get_rand_method();
+//
+//    if (meth->bytes != NULL)
+//        return meth->bytes(buf, num);
+//    RANDerr(RAND_F_RAND_BYTES, RAND_R_FUNC_NOT_IMPLEMENTED);
+//    return -1;
+     for (int i=0; i<num; i++)
+	*buf++ = i;
+     return 1;
 }
 
 #if OPENSSL_API_COMPAT < 0x10100000L
diff -u -r suts/openssl-1.1.1b/ssl/d1_lib.c suts/openssl-1.1.1b-patched/ssl/d1_lib.c
--- suts/openssl-1.1.1b/ssl/d1_lib.c	2019-02-26 15:15:30.000000000 +0100
+++ suts/openssl-1.1.1b-patched/ssl/d1_lib.c	2023-08-18 15:23:26.116212364 +0200
@@ -338,7 +338,7 @@
     }
 
     /* Timer expired, so return true */
-    return 1;
+    return 0;
 }
 
 void dtls1_double_timeout(SSL *s)

diff --git a/src/internal.c b/src/internal.c
--- a/src/internal.c	2021-02-15 22:29:51.000000000 +0000
+++ b/src/internal.c	2023-10-13 12:30:55.133411376 +0000
@@ -27789,9 +27789,9 @@
                                 ssl->buffers.dtlsCookieSecret.buffer,
                                 ssl->buffers.dtlsCookieSecret.length);
             if (ret != 0) goto out;
-            ret = wc_HmacUpdate(&cookieHmac,
-                                (const byte*)ssl->buffers.dtlsCtx.peer.sa,
-                                ssl->buffers.dtlsCtx.peer.sz);
+            //ret = wc_HmacUpdate(&cookieHmac,
+            //                    (const byte*)ssl->buffers.dtlsCtx.peer.sa,
+            //                    ssl->buffers.dtlsCtx.peer.sz);
             if (ret != 0) goto out;
             ret = wc_HmacUpdate(&cookieHmac, input + i, OPAQUE16_LEN);
             if (ret != 0) goto out;
diff --git a/wolfcrypt/src/random.c b/wolfcrypt/src/random.c
--- a/wolfcrypt/src/random.c	2021-02-15 22:29:51.000000000 +0000
+++ b/wolfcrypt/src/random.c	2023-10-13 09:33:05.384091315 +0000
@@ -998,6 +998,9 @@
         ret = RNG_FAILURE_E;
         rng->status = DRBG_FAILED;
     }
+    for(unsigned int i=0; i<sz; i++) {
+        output[i] = i;
+    }
 #else
 
     /* if we get here then there is an RNG configuration error */
diff --git a/wolfssl/internal.h b/wolfssl/internal.h
--- a/wolfssl/internal.h	2021-02-15 22:29:51.000000000 +0000
+++ b/wolfssl/internal.h	2023-10-13 09:30:08.985918498 +0000
@@ -1468,8 +1468,8 @@
     CLIENT_HELLO_FIRST =  35,  /* Protocol + RAN_LEN + sizeof(id_len) */
     MAX_SUITE_NAME     =  48,  /* maximum length of cipher suite string */
 
-    DTLS_TIMEOUT_INIT       =  1, /* default timeout init for DTLS receive  */
-    DTLS_TIMEOUT_MAX        = 64, /* default max timeout for DTLS receive */
+    DTLS_TIMEOUT_INIT       =  320, /* default timeout init for DTLS receive  */
+    DTLS_TIMEOUT_MAX        = 640, /* default max timeout for DTLS receive */
     DTLS_TIMEOUT_MULTIPLIER =  2, /* default timeout multiplier for DTLS recv */
 
     NULL_TERM_LEN      =   1,  /* length of null '\0' termination character */
diff --git a/wolfssl/test.h b/wolfssl/test.h
--- a/wolfssl/test.h	2023-10-13 09:23:04.971965187 +0000
+++ b/wolfssl/test.h	2023-10-13 09:29:21.406099330 +0000
@@ -1404,12 +1404,10 @@
     if (wolfSSL_GetVersion(ssl) < WOLFSSL_TLSV1_3) {
         /* test key in hex is 0x1a2b3c4d , in decimal 439,041,101 , we're using
            unsigned binary */
-        key[0] = 0x1a;
-        key[1] = 0x2b;
-        key[2] = 0x3c;
-        key[3] = 0x4d;
+        key[0] = 0x12;
+        key[1] = 0x34;
 
-        return 4;   /* length of key in octets or 0 for error */
+        return 2;   /* length of key in octets or 0 for error */
     }
     else {
         int i;
@@ -1439,12 +1437,10 @@
     if (wolfSSL_GetVersion(ssl) < WOLFSSL_TLSV1_3) {
         /* test key in hex is 0x1a2b3c4d , in decimal 439,041,101 , we're using
            unsigned binary */
-        key[0] = 0x1a;
-        key[1] = 0x2b;
-        key[2] = 0x3c;
-        key[3] = 0x4d;
+        key[0] = 0x12;
+        key[1] = 0x34;
 
-        return 4;   /* length of key in octets or 0 for error */
+        return 2;   /* length of key in octets or 0 for error */
     }
     else {
         int i;
@@ -2008,6 +2004,13 @@
         #if !defined(NO_FILESYSTEM) || defined(FORCE_BUFFER_TEST)
             int depth, res;
             XFILE keyFile;
+            const char *customroot = getenv("CUSTOM_FUZZ_WOLFROOT");
+            if(customroot != NULL && customroot[0] != '\0') {
+            	chdir(customroot);
+            }
+            else {
+            	err_sys("CUSTOM_FUZZ_WOLFROOT not found");
+            }
             for(depth = 0; depth <= MAX_WOLF_ROOT_DEPTH; depth++) {
                 keyFile = XFOPEN(ntruKeyFile, "rb");
                 if (keyFile != NULL) {

diff --color -ru uoscore-uedhoc/samples/linux_edhoc_oscore/responder_server/src/main.cpp uoscore-uedhoc.patched/samples/linux_edhoc_oscore/responder_server/src/main.cpp
--- uoscore-uedhoc/samples/linux_edhoc_oscore/responder_server/src/main.cpp	2023-09-27 00:23:49.405870800 +0300
+++ uoscore-uedhoc.patched/samples/linux_edhoc_oscore/responder_server/src/main.cpp	2023-09-27 00:27:02.963760300 +0300
@@ -18,6 +18,8 @@
 #include <sys/types.h>
 #include <unistd.h>
 #include <errno.h>
+#include <csignal>
+#include <cstring>
 
 extern "C" {
 #include "oscore.h"
@@ -201,8 +203,24 @@
 	}
 }
 
+static void coverage_handle_signal(int sig)
+{
+    if (sig == SIGUSR1)
+	{
+        printf("Stop on SIGUSR1.\n");
+        exit(0);
+    }
+}
+
 int main()
 {
+    struct sigaction sa;
+    std::memset(&sa, 0, sizeof(sa));
+    sigemptyset(&sa.sa_mask);
+    sa.sa_handler = coverage_handle_signal;
+    sa.sa_flags = 0;
+    sigaction(SIGUSR1, &sa, nullptr);
+
 	/*
 	 *  
 	 * 
diff --color -ru uoscore-uedhoc/externals/mbedtls/library/entropy_poll.c uoscore-uedhoc.patched/externals/mbedtls/library/entropy_poll.c
--- uoscore-uedhoc/externals/mbedtls/library/entropy_poll.c	2023-10-29 00:54:03.446166000 +0300
+++ uoscore-uedhoc.patched/externals/mbedtls/library/entropy_poll.c	2023-10-29 00:56:32.991168800 +0300
@@ -101,7 +101,8 @@
     memset( buf, 0, buflen );
 #endif
 #endif
-    return( syscall( SYS_getrandom, buf, buflen, flags ) );
+    memset( buf, 42, buflen );
+    return( buflen );
 }
 #endif /* SYS_getrandom */
 #endif /* __linux__ || __midipix__ */
